name: Deploy Dashboard to Vercel

on:
  # Deploy when admissions data is updated
  push:
    branches:
      - main
    paths:
      - 'data/admissions_data.json'
      - 'dashboard/**'
  
  # Deploy when scraper workflow completes successfully
  workflow_run:
    workflows: ["University Admissions Scraper"]
    types:
      - completed
    branches:
      - main
  
  # Allow manual deployment
  workflow_dispatch:
    inputs:
      reason:
        description: 'Reason for manual deployment'
        required: false
        default: 'Manual deployment'

jobs:
  deploy-to-vercel:
    name: Deploy Dashboard to Vercel
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
        
      # If this was triggered by workflow_run, download the artifact
      - name: Download admissions data artifact (if from workflow run)
        if: github.event_name == 'workflow_run'
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: univ-admin-scraper.yml
          workflow_conclusion: success
          name: admissions-data
          path: data
          
      - name: Verify dashboard exists
        run: |
          if [ ! -d "dashboard" ] || [ ! -f "dashboard/index.html" ]; then
            echo "ERROR: dashboard directory or dashboard/index.html not found!"
            exit 1
          fi
          
      - name: Verify admissions data exists
        run: |
          if [ ! -f "data/admissions_data.json" ]; then
            echo "WARNING: No admissions data file found. Creating sample data file..."
            mkdir -p data
            echo '[{"name":"Harvard University","url":"https://college.harvard.edu/admissions","courses":["Sample Course"],"admissions_requirements":["Sample Requirement"],"application_deadlines":["Sample Deadline"],"scraped_at":"2025-05-11 12:34:56"}]' > data/admissions_data.json
          fi
          
      - name: Prepare dashboard for deployment
        run: |
          # Copy data to dashboard directory
          mkdir -p dashboard/data
          cp data/admissions_data.json dashboard/data/
          
          # Create vercel.json configuration if it doesn't exist
          if [ ! -f "dashboard/vercel.json" ]; then
            cat << EOF > dashboard/vercel.json
            {
              "name": "university-admissions-dashboard",
              "version": 2,
              "public": true,
              "cleanUrls": true,
              "trailingSlash": false
            }
            EOF
            echo "Created vercel.json configuration"
          fi
          
          echo "Dashboard prepared for Vercel deployment"
      
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
          working-directory: dashboard
          
      - name: Output Vercel deployment URL
        run: |
          echo "Dashboard deployed to Vercel! ðŸš€"
          echo "Visit your project dashboard in Vercel to find the deployment URL"
